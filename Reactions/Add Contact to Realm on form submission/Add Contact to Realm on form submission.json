{
  "_id": "60ed24a2309bbd3d36a47efb",
  "apikey_unique": {
    "type": "Point",
    "coordinates": [
      0,
      0,
    ]
  },
  "owners": [
    {
      "_id": "5eb14f76f4e2c15ffb9bf805",
      "firstName": "Sam",
      "lastName": "Rae",
      "name": "Sam Rae",
      "_type": "user",
    }
  ],
  "managedOwners": [
    {
      "_id": "5eb14f10ff872a540dbbbe16",
      "_type": "persona",
      "firstName": "Sam",
      "title": "Sam Rae",
      "lastName": "Rae",
    }
  ],
  "status": "active",
  "hashtags": [],
  "_references": [],
  "mentions": [],
  "keywords": [
    "christian conventions of wa inc",
  ],
  "privacy": "secure",
  "triggers": [
    "content.create",
  ],
  "conditions": [
    "input.item._type == 'interaction'",
  ],
  "contacts": [],
  "teams": [],
  "integrations": [],
  "items": [],
  "styles": [],
  "realms": [
    {
      "_id": "5e82a7cd281d6602b698b483",
      "title": "Christian Conventions of WA Inc",
      "color": "#7f12b3",
      "bgColor": "#e7b3ff",
      "slug": "christian-conventions-of-wa-inc",
      "_type": "realm",
    }
  ],
  "policies": [],
  "developmentMode": false,
  "tags": [],
  "actions": [
    {
      "conditions": [],
      "type": "code",
      "_id": "61f4e7a25b9b1d0011e8ef8f",
      "script": "/* This Reaction monitors all form submissions (Interactions) and adds Contacts who fill out forms to the Realm of whatever forms they fill out. For example, someone registers for PWC. This Reaction will add that person to the PWC Realm. This is needed because Fluro does not automatically add *existing* contacts to the Realms of forms when they fill them out. */ return done(null, input);",
      "deactivate": false,
    },
    {
      "conditions": [],
      "type": "populate",
      "_id": "61b16f3893f1190a2c5b7811",
      "data": {
        "keys": [
          "item",
          "data.submittedData.data.contact",
        ],
        "populateSelect": []
      },
      "deactivate": false,
    },
    {
      "conditions": [],
      "type": "code",
      "_id": "61a4ca045c68ba000e5b9753",
      "script": "/* Extract data we need */ // Load packages const _ = require('lodash'); // Get data from input const interactionRealms = input.item.realms; const inputContacts = input.data.submittedData.data.contact; let contacts = []; // If single contact object if (_.has(inputContacts, '_id')) { contacts.push(inputContacts); // If array of contact objects } else if (_.isArray(inputContacts)) { contacts = inputContacts; // Else seems like there are no contacts attached. Stop the Reaction. } else { return done(null, 'STOP'); } // Replace input with only the data we need input = { interactionRealms, contacts }; // Finish the action and send the input to the next action return done(null, input);",
      "deactivate": false,
    },
    {
      "conditions": [],
      "type": "code",
      "_id": "61b06936ce49290013588059",
      "script": "/* Add Contact to Realm */ // Load packages // const _ = require('lodash'); const async = require('async'); // Get input data needed const { interactionRealms, contacts } = input; // Set up request headers const headers = { 'Content-Type': 'application/json; charset=utf-8' }; // Set up results structures to return info to the next step const result = {}; const successfulContacts = []; // Function to execute on each contact function updateRealms(contact, index, next) { const contactRealms = contact.realms; const newRealms = contactRealms.concat(interactionRealms); const body = { realms: newRealms }; $fluro.api.put(`/content/contact/${contact._id}`, body, headers) .then(() => { successfulContacts.push(contact._id); next(); }) .catch((err) => next(err)); } // Callback function â€” after all iterations are finished function callback(err) { if (err) { const errorMessage = $fluro.utils.errorMessage(err); return done(errorMessage, 'STOP'); } // Return results result.successfulContacts = successfulContacts; input.result = result; return done(null, input); } // Run the async functions return async.forEachOfSeries(contacts, updateRealms, callback);",
      "deactivate": false,
    },
    {
      "conditions": [],
      "type": "stop",
      "_id": "61a4ca045c68ba000e5b9755",
      "deactivate": false,
    }
  ],
  "permissionSets": [
    {
      "realms": [
        {
          "_id": "5e82a7cd281d6602b698b483",
          "status": "active",
          "title": "Christian Conventions of WA Inc",
          "color": "#7f12b3",
          "bgColor": "#e7b3ff",
          "created": "2020-03-31T02:15:41.877Z",
          "updated": "2020-03-31T02:15:41.912Z",
          "slug": "christian-conventions-of-wa-inc",
          "_type": "realm",
        }
      ],
      "roles": [
        {
          "_id": "57f4640c461bb7401a858f77",
          "title": "Full Access",
          "_type": "role",
          "realms": [
            "54ebd2ef3a6e88a31bb68640",
          ],
          "status": "active",
          "updated": "2021-02-24T06:19:11.856Z",
          "created": "2016-10-05T02:23:08.750Z",
          "firstLine": "Grants access to Create, Edit, View and Delete almost every type of content in the system",
        }
      ]
    }
  ],
  "title": "Add Contact to Realm on form submission",
  "account": {
    "_id": "5e82a7cd281d6602b698b481",
    "status": "active",
    "title": "CCOWA",
    "countryCode": "AU",
    "timezone": "Australia/Perth",
  },
  "_type": "reaction",
  "author": {
    "_id": "5eb14f76f4e2c15ffb9bf805",
    "firstName": "Sam",
    "lastName": "Rae",
    "name": "Sam Rae",
    "_type": "user",
  },
  "managedAuthor": {
    "_id": "5eb14f10ff872a540dbbbe16",
    "_type": "persona",
    "firstName": "Sam",
    "title": "Sam Rae",
    "lastName": "Rae",
  },
  "updatedBy": "Sam Rae",
  "created": "2021-07-13T05:29:06.599Z",
  "updated": "2022-04-02T14:35:08.893Z",
  "tests": [
    {
      "_id": "61b16f3893f1190a2c5b7818",
      "title": "Actual form submission",
      "json": "{ "account": "5e82a7cd281d6602b698b481", "user": { "_id": "5eff0aa041a86b0cfbe961c5", "accountType": "application" }, "item": "61b16a24c33b6e04cca97679", "data": { "_type": "interaction", "definition": "newChurchSetupTest", "submittedData": { "title": "New church setup test", "data": { "contact": [ "619ca4884de7ec000f03a8af" ] }, "realms": [ "5e82a7cd281d6602b698b483" ], "rawData": { "contact": [ { "details": { "churchDetails": { "data": { "doyouattendachurch": "no" } } }, "firstName": "Test", "lastName": "Person", "gender": "male", "dob": "1982-05-19T00: 00: 00.000Z", "email": "samrae+test@gmail.com", "phoneNumber": "0439769319" } ] }, "connectionData": { "ip": { "clientIp": "203.59.233.14", "clientIpRoutable": true } }, "applicationAuthor": "5eff0aa041a86b0cfbe961c5", "account": "5e82a7cd281d6602b698b481", "primaryEmail": "samrae+test@gmail.com", "contact": null, "contacts": [ "619ca4884de7ec000f03a8af" ], "attemptLog": "61b16a22c33b6e04cca97673", "mentions": [], "hashtags": [], "_type": "interaction", "definition": "newChurchSetupTest" } }, "key": "content.create", "trigger": "content.create", "message": "Created New church setup test", "model": "interaction" }",
      "testEmail": "sam@stalbans.org.au",
    },
    {
      "_id": "61ee59b0c5e1d4063a7c0814",
      "title": "Test (New church setup test)",
      "json": "{ "trigger": "content.create", "data": { "_type": "interaction", "definition": "newChurchSetupTest", "submittedData": { "title": "New church setup test", "data": { "contact": [ "619ca4884de7ec000f03a8af", "619ca6d24de7ec000f03a94e" ] }, "realms": [ "5e82a7cd281d6602b698b483" ], "rawData": { "contact": [ { "details": { "churchDetails": { "data": { "doyouattendachurch": "yes", "churchAttending": { "_id": "5e9d1bf49b953262c33e1865", "status": "active", "realms": [ "5e9d1bf79b953262c33e187f", "5e82a7cd281d6602b698b483" ], "title": "St Alban's Anglican Church, Highgate", "_type": "team", "created": "2020-04-20T03: 50: 12.925Z", "updated": "2021-10-29T02: 02: 08.558Z", "slug": "st-albans-anglican-church-sx8slca5xw", "definition": "church", "value": "5e9d1bf49b953262c33e1865" } } } }, "firstName": "Test", "lastName": "Person", "gender": "male", "dob": "1982-05-19T00: 00: 00.000Z", "email": "samrae+test@gmail.com", "phoneNumber": "0439769319" }, { "details": { "churchDetails": { "data": { "doyouattendachurch": "no" } } }, "firstName": "Test 2", "lastName": "Person", "gender": "female", "dob": "2011-01-01T00: 00: 00.000Z", "email": "person@test.com", "phoneNumber": "0439769319" } ] }, "connectionData": { "ip": { "clientIp": "159.196.133.245", "clientIpRoutable": true } }, "applicationAuthor": "5eff0aa041a86b0cfbe961c5", "account": "5e82a7cd281d6602b698b481", "primaryEmail": "samrae+test@gmail.com", "contact": null, "contacts": [ "619ca4884de7ec000f03a8af", "619ca6d24de7ec000f03a94e" ], "attemptLog": "61ee590ac5e1d4063a7c07db", "mentions": [], "hashtags": [], "_type": "interaction", "definition": "newChurchSetupTest" } }, "item": { "_id": "61ee590fc5e1d4063a7c07e5", "owners": [], "managedOwners": [], "realms": [ "5e82a7cd281d6602b698b483" ], "title": "New church setup test", "_type": "interaction", "definition": "newChurchSetupTest" } }",
      "testEmail": "sam@stalbans.org.au",
    },
    {
      "_id": "62485f1cd3c2730010524d65",
      "title": "Single-contact form",
      "json": "{ "trigger": "content.create", "data": { "_type": "interaction", "definition": "testLiveSquarePayment", "submittedData": { "title": "Test live Square integration", "data": { "contact": "5e97e0806a9f734dcdc940f1", "_paymentGateway": "61f555d2a0158d01e7c9fa28", "cost": "0" }, "realms": [ "61f546264d66c70018d73006" ], "rawData": { "contact": { "firstName": "Sam", "lastName": "Rae", "email": "samrae@gmail.com" }, "_paymentGateway": "61f555d2a0158d01e7c9fa28", "cost": "0" }, "connectionData": { "ip": { "clientIp": "159.196.133.245", "clientIpRoutable": true } }, "applicationAuthor": "5eff0aa041a86b0cfbe961c5", "account": "5e82a7cd281d6602b698b481", "paymentModifiers": [ { "title": "Registration", "operation": "add", "value": 0, "total": 0 } ], "primaryEmail": "samrae@gmail.com", "contact": null, "contacts": [ "5e97e0806a9f734dcdc940f1" ], "attemptLog": "624857f89b87300013a25be4", "mentions": [], "hashtags": [], "_type": "interaction", "definition": "testLiveSquarePayment" } }, "item": { "_id": "624857f99b87300013a25be8", "owners": [], "managedOwners": [], "realms": [ "61f546264d66c70018d73006" ], "title": "Test live Square integration", "_type": "interaction", "definition": "testLiveSquarePayment" } }",
      "testEmail": "sam@stalbans.org.au",
    }
  ],
  "apikey": "$2a$10$UszS4aG7HhzwuMx0NFovVet3CdczYDHGIOh1DBXExrDwK2OUihGpe",
  "_sid": 123456,
  "statDates": {
    "view": "2021-11-23T08:16:26.567Z",
  },
  "stats": {
    "view": 1,
  },
  "data": {},
  "deactivated": false,
}