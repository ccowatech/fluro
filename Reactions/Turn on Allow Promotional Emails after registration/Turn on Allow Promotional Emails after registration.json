{
  "_id": "61ee5345c3ea9001af00b5cb",
  "apikey_unique": {
    "type": "Point",
    "coordinates": [
      0,
      0,
    ]
  },
  "owners": [
    {
      "_id": "5eb14f76f4e2c15ffb9bf805",
      "firstName": "Sam",
      "lastName": "Rae",
      "name": "Sam Rae",
      "_type": "user",
    }
  ],
  "managedOwners": [
    {
      "_id": "5eb14f10ff872a540dbbbe16",
      "_type": "persona",
      "firstName": "Sam",
      "title": "Sam Rae",
      "lastName": "Rae",
    }
  ],
  "status": "active",
  "hashtags": [],
  "_references": [],
  "mentions": [],
  "keywords": [
    "christian conventions of wa inc",
  ],
  "privacy": "secure",
  "triggers": [
    "content.create",
  ],
  "conditions": [
    "input.item._type == 'interaction'",
  ],
  "contacts": [],
  "teams": [],
  "integrations": [],
  "items": [],
  "styles": [],
  "realms": [
    {
      "_id": "5e82a7cd281d6602b698b483",
      "title": "Christian Conventions of WA Inc",
      "color": "#7f12b3",
      "bgColor": "#e7b3ff",
      "slug": "christian-conventions-of-wa-inc",
      "_type": "realm",
    }
  ],
  "policies": [],
  "developmentMode": false,
  "tags": [],
  "actions": [
    {
      "conditions": [],
      "type": "code",
      "_id": "620cc5ed7ccefc0016d38a5b",
      "script": "/* This Reaction re-subscribes all contacts to Allow Promotional Emails when they submit a form. */ return done(null, input);",
    },
    {
      "conditions": [],
      "type": "populate",
      "_id": "620cc5ed7ccefc0016d38a5c",
      "data": {
        "keys": [
          "item",
        ],
        "populateSelect": []
      }
    },
    {
      "conditions": [],
      "type": "code",
      "_id": "61a4ca045c68ba000e5b9753",
      "script": "/* Format input based on what it is. */ // Load packages const _ = require('lodash'); // Create variables let inputType; let contacts; // Check that this is an interaction with contacts attached, then check for trigger type if (input.data._type === 'interaction' && _.has(input.item, 'contacts') && input.trigger === 'content.create') { inputType = 'autoInteraction'; contacts = input.item.contacts; } else if (input.data._type === 'interaction' && _.has(input.item, 'contacts') && input.trigger === 'manual.spark') { inputType = 'manualInteraction'; contacts = input.item.contacts; } else { inputType = 'unknown'; } // Return data input = {}; input.inputType = inputType; input.contacts = contacts; return done(null, input);",
      "deactivate": false,
    },
    {
      "conditions": [
        "inputType == "unknown"",
      ],
      "type": "stop",
      "_id": "620cc5ed7ccefc0016d38a5e",
    },
    {
      "conditions": [],
      "type": "populate",
      "_id": "620cc5ed7ccefc0016d38a5f",
      "data": {
        "keys": [
          "contacts",
        ],
        "populateSelect": [
          "id",
          "emails",
        ]
      }
    },
    {
      "conditions": [],
      "type": "code",
      "_id": "61b06936ce49290013588059",
      "script": "/* Re-subscribe people to Allow Promotional Emails */ // Get input into variables const { contacts } = input; const emailsToSubscribe = []; // Set up request headers const headers = { 'Content-Type': 'application/json; charset=utf-8' }; // Set up results objects const results = []; // Build array of emails to process. // All the email addresses for a contact must be resubscribed // for the Allow Promotional Emails setting to turn on. for (let i = 0; i < contacts.length; i += 1) { for (let j = 0; j < contacts[i].emails.length; j += 1) { emailsToSubscribe.push(contacts[i].emails[j]); } } const body = { emails: emailsToSubscribe }; return $fluro.api.post('/mailout/resubscribe', body, headers) .then((res) => { results.push(res.data); // Return results input.results = results; return done(null, input); }, done);",
      "deactivate": false,
    },
    {
      "conditions": [],
      "type": "stop",
      "_id": "61a4ca045c68ba000e5b9755",
      "deactivate": false,
    }
  ],
  "permissionSets": [
    {
      "realms": [
        {
          "_id": "5e82a7cd281d6602b698b483",
          "status": "active",
          "title": "Christian Conventions of WA Inc",
          "color": "#7f12b3",
          "bgColor": "#e7b3ff",
          "created": "2020-03-31T02:15:41.877Z",
          "updated": "2020-03-31T02:15:41.912Z",
          "slug": "christian-conventions-of-wa-inc",
          "_type": "realm",
        }
      ],
      "roles": [
        {
          "_id": "57f4640c461bb7401a858f77",
          "title": "Full Access",
          "_type": "role",
          "realms": [
            "54ebd2ef3a6e88a31bb68640",
          ],
          "status": "active",
          "updated": "2021-02-24T06:19:11.856Z",
          "created": "2016-10-05T02:23:08.750Z",
          "firstLine": "Grants access to Create, Edit, View and Delete almost every type of content in the system",
        }
      ]
    }
  ],
  "title": "Turn on Allow Promotional Emails after registration",
  "_type": "reaction",
  "tests": [
    {
      "_id": "61b16f3893f1190a2c5b7818",
      "title": "Actual form submission",
      "json": "{ "account": "5e82a7cd281d6602b698b481", "user": { "_id": "5eff0aa041a86b0cfbe961c5", "accountType": "application" }, "item": "61b16a24c33b6e04cca97679", "data": { "_type": "interaction", "definition": "newChurchSetupTest", "submittedData": { "title": "New church setup test", "data": { "contact": [ "619ca4884de7ec000f03a8af" ] }, "realms": [ "5e82a7cd281d6602b698b483" ], "rawData": { "contact": [ { "details": { "churchDetails": { "data": { "doyouattendachurch": "no" } } }, "firstName": "Test", "lastName": "Person", "gender": "male", "dob": "1982-05-19T00: 00: 00.000Z", "email": "samrae+test@gmail.com", "phoneNumber": "0439769319" } ] }, "connectionData": { "ip": { "clientIp": "203.59.233.14", "clientIpRoutable": true } }, "applicationAuthor": "5eff0aa041a86b0cfbe961c5", "account": "5e82a7cd281d6602b698b481", "primaryEmail": "samrae+test@gmail.com", "contact": null, "contacts": [ "619ca4884de7ec000f03a8af" ], "attemptLog": "61b16a22c33b6e04cca97673", "mentions": [], "hashtags": [], "_type": "interaction", "definition": "newChurchSetupTest" } }, "key": "content.create", "trigger": "content.create", "message": "Created New church setup test", "model": "interaction" }",
      "testEmail": "sam@stalbans.org.au",
    },
    {
      "_id": "61ee5a8619caa8000d9208a7",
      "title": "Test (New church setup test)",
      "json": "{ "trigger": "content.create", "data": { "_type": "interaction", "definition": "newChurchSetupTest", "submittedData": { "title": "New church setup test", "data": { "contact": [ "619ca4884de7ec000f03a8af", "619ca6d24de7ec000f03a94e" ] }, "realms": [ "5e82a7cd281d6602b698b483" ], "rawData": { "contact": [ { "details": { "churchDetails": { "data": { "doyouattendachurch": "yes", "churchAttending": { "_id": "5e9d1bf49b953262c33e1865", "status": "active", "realms": [ "5e9d1bf79b953262c33e187f", "5e82a7cd281d6602b698b483" ], "title": "St Alban's Anglican Church, Highgate", "_type": "team", "created": "2020-04-20T03: 50: 12.925Z", "updated": "2021-10-29T02: 02: 08.558Z", "slug": "st-albans-anglican-church-sx8slca5xw", "definition": "church", "value": "5e9d1bf49b953262c33e1865" } } } }, "firstName": "Test", "lastName": "Person", "gender": "male", "dob": "1982-05-19T00: 00: 00.000Z", "email": "samrae+test@gmail.com", "phoneNumber": "0439769319" }, { "details": { "churchDetails": { "data": { "doyouattendachurch": "no" } } }, "firstName": "Test 2", "lastName": "Person", "gender": "female", "dob": "2011-01-01T00: 00: 00.000Z", "email": "person@test.com", "phoneNumber": "0439769319" } ] }, "connectionData": { "ip": { "clientIp": "159.196.133.245", "clientIpRoutable": true } }, "applicationAuthor": "5eff0aa041a86b0cfbe961c5", "account": "5e82a7cd281d6602b698b481", "primaryEmail": "samrae+test@gmail.com", "contact": null, "contacts": [ "619ca4884de7ec000f03a8af", "619ca6d24de7ec000f03a94e" ], "attemptLog": "61ee590ac5e1d4063a7c07db", "mentions": [], "hashtags": [], "_type": "interaction", "definition": "newChurchSetupTest" } }, "item": { "_id": "61ee590fc5e1d4063a7c07e5", "owners": [], "managedOwners": [], "realms": [ "5e82a7cd281d6602b698b483" ], "title": "New church setup test", "_type": "interaction", "definition": "newChurchSetupTest" } }",
      "testEmail": "sam@stalbans.org.au",
    },
    {
      "_id": "620cc5ed7ccefc0016d38a64",
      "title": "Actual input from Manual spark",
      "json": "{ "trigger": "manual.spark", "data": { "_type": "interaction", "definition": "newChurchSetupTest" }, "item": { "title": "New church setup test", "_type": "interaction", "definition": "newChurchSetupTest", "_id": "620ca10f66de7b0017515e9f" } }",
      "testEmail": "sam@stalbans.org.au",
    },
    {
      "_id": "620cc5ed7ccefc0016d38a65",
      "title": "Manual Spark with 2 contacts",
      "json": "{"trigger":"manual.spark","data":{"_type":"interaction","definition":"newChurchSetupTest"},"item":{"title":"New church setup test","_type":"interaction","definition":"newChurchSetupTest","_id":"620addbb439c4b00171d7305"}}",
      "testEmail": "sam@stalbans.org.au",
    }
  ],
  "_sid": 123456,
  "deactivated": false,
  "account": {
    "_id": "5e82a7cd281d6602b698b481",
    "status": "active",
    "title": "CCOWA",
    "countryCode": "AU",
    "timezone": "Australia/Perth",
  },
  "author": {
    "_id": "5eb14f76f4e2c15ffb9bf805",
    "firstName": "Sam",
    "lastName": "Rae",
    "name": "Sam Rae",
    "_type": "user",
  },
  "managedAuthor": {
    "_id": "5eb14f10ff872a540dbbbe16",
    "_type": "persona",
    "firstName": "Sam",
    "title": "Sam Rae",
    "lastName": "Rae",
  },
  "updatedBy": "Sam Rae",
  "created": "2022-01-24T07:20:37.710Z",
  "updated": "2022-04-02T05:10:52.226Z",
  "apikey": "$2a$10$W7TEAs03C79CdEGqqWiuKe8hd2EudtD9C76JHJTm7xUEi5xlyD4T6",
  "data": {},
  "statDates": {
    "view": "2022-01-28T17:34:15.106Z",
  },
  "stats": {
    "view": 1,
  }
}